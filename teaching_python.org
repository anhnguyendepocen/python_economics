#+Title: How we teach python


We teach python in a way that may seem counter-intuitive to you. First, you are not doing an engineering/IT degree, you are an economist. Hence, we are interested in economic applications; not so much in the details of the python language (however beautiful that language is). 

Of course, you need to learn the basics of the language, things like data-types, control structures etc. In other words, you need to know what a list is, a dictionary, a numpy array, a pandas dataframe, how to define functions, use list comprehension, if-then-else structures etc. 

This "technical" part you mainly learn via Datacamp. There they teach you the details of the language such that you get the syntax right. By doing their exercises you learn to type python, recognize error messages (when you make mistakes).

In class we then focus on applying these tools to economic problems. In class we also type python and we also make mistakes which generate errors. So there is an overlap with the Datacamp lectures, but the focus in class in completely different. Further, in economics we are interested in optimization (we tend to maximize profits, utility etc.) and solving equations (specifically, solving for fixed points which give us equilibria). For this we use numpy and scipy, which is not covered much at Datacamp.

Many concepts you will first see at Datacamp and then we apply them in class. Sometimes it will be the other way around: we used something in class and you learn more details about it at Datacamp. This is perfectly fine. However, it is important that you keep up-to-date with Datacamp otherwise you are going to get lost.

Finally, we urge you to use google (or other search engines like [[https://duckduckgo.com/][DuckDuckGo]]) and [[https://stackoverflow.com/][stackoverflow]] also with your assignments. Some students find this weird at the beginning: should we not teach you everything that you need to know? The answer is no for a number of reasons. First, even professional programmers use google and stackoverflow all the time. If you are on [[https://www.quora.com/][Quora]]; see [[https://www.quora.com/Does-it-make-a-programmer-weak-for-using-Google-or-Stack-Overflow-when-coding][this post]] and [[https://www.quora.com/Do-programmers-know-programming-from-their-hearts-or-does-Google-remain-a-useful-tool][this one]]. Second, python is open source and lots of people work with it. If you encounter a problem, chances are that someone else had the same problem and knows the solution to it. There is not need to "invest the wheel". Use the resources available to you. If you copy a lot of code, you should add a reference. Finally, because python is open source, it develops extremely rapidly. The things that we teach you now, will be obsolete in a couple of years time. Hence, you need to be able to find your way around also in 10 years time. To start practicing this, use google now.
